@using Game.Server.Models.Admin;
@model StatisticsResponse;

<div class="d-flex justify-content-evenly mb-5">
    <div class="d-flex flex-column align-items-center p-5 border shadow-sm rounded-4 border-success text-success">
        <span>Players</span>
        <span class="fs-1">
            @Model.PlayerCount
        </span>
    </div>

    <div class="d-flex flex-column align-items-center p-5 border shadow-sm rounded-4 border-success text-success">
        <span>Sessions</span>
        <span class="fs-1">
            @Model.SessionCount
        </span>
    </div>
</div>

<div class="d-flex flex-column">
    @foreach (var group in Model.LevelStatistics.GroupBy(s => s.LevelName[0]))
    {
        <div class="mt-3">
            @await Html.PartialAsync("LevelStatisticsPartial", group.ToArray())
        </div>
    }
</div>

<script>
function reveal(levelName) {
    const levelNames = [
    @foreach(var level in Model.LevelStatistics)
    {
        <text>"@level.LevelName",</text>
    }
    ];

    for(let i = 0; i < levelNames.length; ++i) {
        if (!levelNames[i].startsWith(levelName[0])) {
            continue;
        }

        const button = document.getElementById(`btn-${levelNames[i]}`);
        const table = document.getElementById(`table-${levelNames[i]}`);
        if (levelName === levelNames[i]) {
            button.classList.add('active');
            table.style.display = 'block';
        } else {
            button.classList.remove('active');
            table.style.display = 'none';
        }
    }
}
</script>